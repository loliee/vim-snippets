priority -50

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip().split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

snippet meta "Add meta information"
---
title: ${1}
date: ${2:`date +%Y-%m-%d`}
tags: $3
---
# $1
$0
endsnippet

snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:${2:http://www.url.com}}) $0
endsnippet

snippet cb "Codeblock"
\`\`\`${1:bash}
$0
\`\`\`
endsnippet

snippet image "Image"
![${1:Image Title}](${2})
endsnippet

snippet box "Add checkbox list"
- [ ] ${1}
- [ ] ${0}
endsnippet

post_jump "create_table(snip)"
snippet "table(\d+x\d+)" "Customizable table" br
`!p snip.rv = match.group(1)`
endsnippet

snippet pr "Pull request template"
## Description

${1}

## Dependencies

${0:n/a}
endsnippet
